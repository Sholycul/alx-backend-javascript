{"{\"assumptions\":{},\"sourceRoot\":\"/root/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/root/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/root/alx-backend-javascript/0x06-unittests_in_js/0-calcul.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/root/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"// file to contain test cases of the calculateNumber function\n\nconst assert = require('assert');\nconst {\n  describe,\n  it\n} = require('mocha');\nconst calculateNumber = require('./0-calcul');\n\n// Testsuite for calculateNumber function\ndescribe('calculateNumber', function () {\n  // test cases\n  it('should return 4 when inputs are 1 and 3', function () {\n    assert.strictEqual(calculateNumber(1, 3), 4);\n  });\n  it('should return 5 when inputs are 1 and 3.7', function () {\n    assert.strictEqual(calculateNumber(1, 3.7), 5);\n  });\n  it('should return 5 when inputs are 1.2 and 3.7', function () {\n    assert.strictEqual(calculateNumber(1.2, 3.7), 5);\n  });\n  it('should return 6 when inputs are 1.5 and 3.7', function () {\n    assert.strictEqual(calculateNumber(1.5, 3.7), 6);\n  });\n\n  // Additional edge cases\n  it('should return 0 when inputs are 0.1 and -0.1', function () {\n    assert.strictEqual(calculateNumber(0.1, -0.1), 0);\n  });\n  it('should return -2 when inputs are -1.2 and -1.2', function () {\n    assert.strictEqual(calculateNumber(-1.2, -1.2), -2);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiZGVzY3JpYmUiLCJpdCIsImNhbGN1bGF0ZU51bWJlciIsInN0cmljdEVxdWFsIl0sInNvdXJjZVJvb3QiOiIvcm9vdC9hbHgtYmFja2VuZC1qYXZhc2NyaXB0LzB4MDYtdW5pdHRlc3RzX2luX2pzLyIsInNvdXJjZXMiOlsiMC1jYWxjdWwudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmaWxlIHRvIGNvbnRhaW4gdGVzdCBjYXNlcyBvZiB0aGUgY2FsY3VsYXRlTnVtYmVyIGZ1bmN0aW9uXG5cbmNvbnN0IGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuY29uc3QgeyBkZXNjcmliZSwgaXR9ID0gcmVxdWlyZSgnbW9jaGEnKTtcbmNvbnN0IGNhbGN1bGF0ZU51bWJlciA9IHJlcXVpcmUoJy4vMC1jYWxjdWwnKTtcblxuLy8gVGVzdHN1aXRlIGZvciBjYWxjdWxhdGVOdW1iZXIgZnVuY3Rpb25cbmRlc2NyaWJlKCdjYWxjdWxhdGVOdW1iZXInLCBmdW5jdGlvbiAoKSB7XG4gIC8vIHRlc3QgY2FzZXNcbiAgaXQoJ3Nob3VsZCByZXR1cm4gNCB3aGVuIGlucHV0cyBhcmUgMSBhbmQgMycsIGZ1bmN0aW9uICgpIHtcbiAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2FsY3VsYXRlTnVtYmVyKDEsIDMpLCA0KTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCByZXR1cm4gNSB3aGVuIGlucHV0cyBhcmUgMSBhbmQgMy43JywgZnVuY3Rpb24gKCkge1xuICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoMSwgMy43KSwgNSk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmV0dXJuIDUgd2hlbiBpbnB1dHMgYXJlIDEuMiBhbmQgMy43JywgZnVuY3Rpb24gKCkge1xuICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoMS4yLCAzLjcpLCA1KTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCByZXR1cm4gNiB3aGVuIGlucHV0cyBhcmUgMS41IGFuZCAzLjcnLCBmdW5jdGlvbiAoKSB7XG4gICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNhbGN1bGF0ZU51bWJlcigxLjUsIDMuNyksIDYpO1xuICB9KTtcblxuICAvLyBBZGRpdGlvbmFsIGVkZ2UgY2FzZXNcbiAgaXQoJ3Nob3VsZCByZXR1cm4gMCB3aGVuIGlucHV0cyBhcmUgMC4xIGFuZCAtMC4xJywgZnVuY3Rpb24gKCkge1xuICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoMC4xLCAtMC4xKSwgMCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmV0dXJuIC0yIHdoZW4gaW5wdXRzIGFyZSAtMS4yIGFuZCAtMS4yJywgZnVuY3Rpb24gKCkge1xuICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoLTEuMiwgLTEuMiksIC0yKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQ2hDLE1BQU07RUFBRUMsUUFBUTtFQUFFQztBQUFFLENBQUMsR0FBR0YsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUN4QyxNQUFNRyxlQUFlLEdBQUdILE9BQU8sQ0FBQyxZQUFZLENBQUM7O0FBRTdDO0FBQ0FDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxZQUFZO0VBQ3RDO0VBQ0FDLEVBQUUsQ0FBQyx5Q0FBeUMsRUFBRSxZQUFZO0lBQ3hESCxNQUFNLENBQUNLLFdBQVcsQ0FBQ0QsZUFBZSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDOUMsQ0FBQyxDQUFDO0VBRUZELEVBQUUsQ0FBQywyQ0FBMkMsRUFBRSxZQUFZO0lBQzFESCxNQUFNLENBQUNLLFdBQVcsQ0FBQ0QsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDaEQsQ0FBQyxDQUFDO0VBRUZELEVBQUUsQ0FBQyw2Q0FBNkMsRUFBRSxZQUFZO0lBQzVESCxNQUFNLENBQUNLLFdBQVcsQ0FBQ0QsZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDO0VBRUZELEVBQUUsQ0FBQyw2Q0FBNkMsRUFBRSxZQUFZO0lBQzVESCxNQUFNLENBQUNLLFdBQVcsQ0FBQ0QsZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDOztFQUVGO0VBQ0FELEVBQUUsQ0FBQyw4Q0FBOEMsRUFBRSxZQUFZO0lBQzdESCxNQUFNLENBQUNLLFdBQVcsQ0FBQ0QsZUFBZSxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUNuRCxDQUFDLENBQUM7RUFFRkQsRUFBRSxDQUFDLGdEQUFnRCxFQUFFLFlBQVk7SUFDL0RILE1BQU0sQ0FBQ0ssV0FBVyxDQUFDRCxlQUFlLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNyRCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["assert","require","describe","it","calculateNumber","strictEqual"],"sourceRoot":"/root/alx-backend-javascript/0x06-unittests_in_js/","sources":["0-calcul.test.js"],"sourcesContent":["// file to contain test cases of the calculateNumber function\n\nconst assert = require('assert');\nconst { describe, it} = require('mocha');\nconst calculateNumber = require('./0-calcul');\n\n// Testsuite for calculateNumber function\ndescribe('calculateNumber', function () {\n  // test cases\n  it('should return 4 when inputs are 1 and 3', function () {\n    assert.strictEqual(calculateNumber(1, 3), 4);\n  });\n\n  it('should return 5 when inputs are 1 and 3.7', function () {\n    assert.strictEqual(calculateNumber(1, 3.7), 5);\n  });\n\n  it('should return 5 when inputs are 1.2 and 3.7', function () {\n    assert.strictEqual(calculateNumber(1.2, 3.7), 5);\n  });\n\n  it('should return 6 when inputs are 1.5 and 3.7', function () {\n    assert.strictEqual(calculateNumber(1.5, 3.7), 6);\n  });\n\n  // Additional edge cases\n  it('should return 0 when inputs are 0.1 and -0.1', function () {\n    assert.strictEqual(calculateNumber(0.1, -0.1), 0);\n  });\n\n  it('should return -2 when inputs are -1.2 and -1.2', function () {\n    assert.strictEqual(calculateNumber(-1.2, -1.2), -2);\n  });\n});\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAM;EAAEC,QAAQ;EAAEC;AAAE,CAAC,GAAGF,OAAO,CAAC,OAAO,CAAC;AACxC,MAAMG,eAAe,GAAGH,OAAO,CAAC,YAAY,CAAC;;AAE7C;AACAC,QAAQ,CAAC,iBAAiB,EAAE,YAAY;EACtC;EACAC,EAAE,CAAC,yCAAyC,EAAE,YAAY;IACxDH,MAAM,CAACK,WAAW,CAACD,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9C,CAAC,CAAC;EAEFD,EAAE,CAAC,2CAA2C,EAAE,YAAY;IAC1DH,MAAM,CAACK,WAAW,CAACD,eAAe,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAChD,CAAC,CAAC;EAEFD,EAAE,CAAC,6CAA6C,EAAE,YAAY;IAC5DH,MAAM,CAACK,WAAW,CAACD,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;EAEFD,EAAE,CAAC,6CAA6C,EAAE,YAAY;IAC5DH,MAAM,CAACK,WAAW,CAACD,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;;EAEF;EACAD,EAAE,CAAC,8CAA8C,EAAE,YAAY;IAC7DH,MAAM,CAACK,WAAW,CAACD,eAAe,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EACnD,CAAC,CAAC;EAEFD,EAAE,CAAC,gDAAgD,EAAE,YAAY;IAC/DH,MAAM,CAACK,WAAW,CAACD,eAAe,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACrD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1726870456479},"{\"assumptions\":{},\"sourceRoot\":\"/root/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/root/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/root/alx-backend-javascript/0x06-unittests_in_js/0-calcul.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/root/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"/**\n * Rounds the numbers a and b and returns their sum\n * @param {number} a - The first number (int or float)\n * @param {number} b - The second number (int or float)\n * @returns {number} The sum of a and b\n */\n\nfunction calculateNumber(a, b) {\n  // we round the numbers\n  const aApprox = Math.round(a);\n  const bApprox = Math.round(b);\n\n  // return sum of rounded numbers\n  return aApprox + bApprox;\n}\nmodule.exports = calculateNumber;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYWxjdWxhdGVOdW1iZXIiLCJhIiwiYiIsImFBcHByb3giLCJNYXRoIiwicm91bmQiLCJiQXBwcm94IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL3Jvb3QvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbIjAtY2FsY3VsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUm91bmRzIHRoZSBudW1iZXJzIGEgYW5kIGIgYW5kIHJldHVybnMgdGhlaXIgc3VtXG4gKiBAcGFyYW0ge251bWJlcn0gYSAtIFRoZSBmaXJzdCBudW1iZXIgKGludCBvciBmbG9hdClcbiAqIEBwYXJhbSB7bnVtYmVyfSBiIC0gVGhlIHNlY29uZCBudW1iZXIgKGludCBvciBmbG9hdClcbiAqIEByZXR1cm5zIHtudW1iZXJ9IFRoZSBzdW0gb2YgYSBhbmQgYlxuICovXG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZU51bWJlcihhLCBiKSB7XG4gIC8vIHdlIHJvdW5kIHRoZSBudW1iZXJzXG4gIGNvbnN0IGFBcHByb3ggPSBNYXRoLnJvdW5kKGEpO1xuICBjb25zdCBiQXBwcm94ID0gTWF0aC5yb3VuZChiKTtcblxuICAvLyByZXR1cm4gc3VtIG9mIHJvdW5kZWQgbnVtYmVyc1xuICByZXR1cm4gYUFwcHJveCArIGJBcHByb3g7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2FsY3VsYXRlTnVtYmVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsZUFBZUEsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUU7RUFDN0I7RUFDQSxNQUFNQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDSixDQUFDLENBQUM7RUFDN0IsTUFBTUssT0FBTyxHQUFHRixJQUFJLENBQUNDLEtBQUssQ0FBQ0gsQ0FBQyxDQUFDOztFQUU3QjtFQUNBLE9BQU9DLE9BQU8sR0FBR0csT0FBTztBQUMxQjtBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBR1IsZUFBZSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["calculateNumber","a","b","aApprox","Math","round","bApprox","module","exports"],"sourceRoot":"/root/alx-backend-javascript/0x06-unittests_in_js/","sources":["0-calcul.js"],"sourcesContent":["/**\n * Rounds the numbers a and b and returns their sum\n * @param {number} a - The first number (int or float)\n * @param {number} b - The second number (int or float)\n * @returns {number} The sum of a and b\n */\n\nfunction calculateNumber(a, b) {\n  // we round the numbers\n  const aApprox = Math.round(a);\n  const bApprox = Math.round(b);\n\n  // return sum of rounded numbers\n  return aApprox + bApprox;\n}\n\nmodule.exports = calculateNumber;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC7B;EACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC;EAC7B,MAAMK,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC;;EAE7B;EACA,OAAOC,OAAO,GAAGG,OAAO;AAC1B;AAEAC,MAAM,CAACC,OAAO,GAAGR,eAAe","ignoreList":[]}},"mtime":1726870412415}}